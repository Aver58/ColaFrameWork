//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GloablDefineWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("GloablDefine");
		L.RegVar("ColorWhite", get_ColorWhite, set_ColorWhite);
		L.RegVar("ColorRed", get_ColorRed, set_ColorRed);
		L.RegVar("ColorGreen", get_ColorGreen, set_ColorGreen);
		L.RegVar("ColorBlue", get_ColorBlue, set_ColorBlue);
		L.RegVar("ColorBlack", get_ColorBlack, set_ColorBlack);
		L.RegVar("ColorYellow", get_ColorYellow, set_ColorYellow);
		L.RegVar("ColorGray", get_ColorGray, set_ColorGray);
		L.RegVar("PateBlue", get_PateBlue, set_PateBlue);
		L.RegVar("PateRed", get_PateRed, set_PateRed);
		L.RegVar("PateGreen", get_PateGreen, set_PateGreen);
		L.RegVar("extenName", get_extenName, null);
		L.RegVar("resbasePathList", get_resbasePathList, set_resbasePathList);
		L.RegVar("UIViewTag", get_UIViewTag, null);
		L.RegVar("UIIgneroTag", get_UIIgneroTag, null);
		L.RegVar("UIPropertyTag", get_UIPropertyTag, null);
		L.RegVar("UIExportPrefabPath", get_UIExportPrefabPath, null);
		L.RegVar("UIExportCSScriptPath", get_UIExportCSScriptPath, null);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ColorWhite(IntPtr L)
	{
		try
		{
			ToLua.Push(L, GloablDefine.ColorWhite);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ColorRed(IntPtr L)
	{
		try
		{
			ToLua.Push(L, GloablDefine.ColorRed);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ColorGreen(IntPtr L)
	{
		try
		{
			ToLua.Push(L, GloablDefine.ColorGreen);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ColorBlue(IntPtr L)
	{
		try
		{
			ToLua.Push(L, GloablDefine.ColorBlue);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ColorBlack(IntPtr L)
	{
		try
		{
			ToLua.Push(L, GloablDefine.ColorBlack);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ColorYellow(IntPtr L)
	{
		try
		{
			ToLua.Push(L, GloablDefine.ColorYellow);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ColorGray(IntPtr L)
	{
		try
		{
			ToLua.Push(L, GloablDefine.ColorGray);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PateBlue(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, GloablDefine.PateBlue);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PateRed(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, GloablDefine.PateRed);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PateGreen(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, GloablDefine.PateGreen);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_extenName(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GloablDefine.extenName);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_resbasePathList(IntPtr L)
	{
		try
		{
			ToLua.PushSealed(L, GloablDefine.resbasePathList);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UIViewTag(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GloablDefine.UIViewTag);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UIIgneroTag(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GloablDefine.UIIgneroTag);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UIPropertyTag(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GloablDefine.UIPropertyTag);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UIExportPrefabPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GloablDefine.UIExportPrefabPath);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UIExportCSScriptPath(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GloablDefine.UIExportCSScriptPath);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ColorWhite(IntPtr L)
	{
		try
		{
			UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
			GloablDefine.ColorWhite = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ColorRed(IntPtr L)
	{
		try
		{
			UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
			GloablDefine.ColorRed = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ColorGreen(IntPtr L)
	{
		try
		{
			UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
			GloablDefine.ColorGreen = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ColorBlue(IntPtr L)
	{
		try
		{
			UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
			GloablDefine.ColorBlue = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ColorBlack(IntPtr L)
	{
		try
		{
			UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
			GloablDefine.ColorBlack = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ColorYellow(IntPtr L)
	{
		try
		{
			UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
			GloablDefine.ColorYellow = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ColorGray(IntPtr L)
	{
		try
		{
			UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
			GloablDefine.ColorGray = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_PateBlue(IntPtr L)
	{
		try
		{
			EPateColor arg0 = (EPateColor)ToLua.CheckObject<EPateColor>(L, 2);
			GloablDefine.PateBlue = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_PateRed(IntPtr L)
	{
		try
		{
			EPateColor arg0 = (EPateColor)ToLua.CheckObject<EPateColor>(L, 2);
			GloablDefine.PateRed = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_PateGreen(IntPtr L)
	{
		try
		{
			EPateColor arg0 = (EPateColor)ToLua.CheckObject<EPateColor>(L, 2);
			GloablDefine.PateGreen = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_resbasePathList(IntPtr L)
	{
		try
		{
			System.Collections.Generic.List<string> arg0 = (System.Collections.Generic.List<string>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<string>));
			GloablDefine.resbasePathList = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

